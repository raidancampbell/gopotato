package main

import "io/ioutil"

type ram [0xFFF]byte

var mem ram

// 0x000 to 0x1FF reserved for interpreter
// 0x200 start of programs

// set up the system's 5-byte font, starting at location 0x000
func initRAM() {
	sprite0 := []byte{0xF0, 0x90, 0x90, 0x90, 0xF0}
	sprite1 := []byte{0x20, 0x60, 0x20, 0x20, 0x70}
	sprite2 := []byte{0xF0, 0x10, 0xF0, 0x80, 0xF0}
	sprite3 := []byte{0xF0, 0x10, 0xF0, 0x10, 0xF0}
	sprite4 := []byte{0x90, 0x90, 0xF0, 0x10, 0x10}
	sprite5 := []byte{0xF0, 0x80, 0xF0, 0x10, 0xF0}
	sprite6 := []byte{0xF0, 0x80, 0xF0, 0x90, 0xF0}
	sprite7 := []byte{0xF0, 0x10, 0x20, 0x40, 0x40}
	sprite8 := []byte{0xF0, 0x90, 0xF0, 0x90, 0xF0}
	sprite9 := []byte{0xF0, 0x90, 0xF0, 0x10, 0xF0}
	spriteA := []byte{0xF0, 0x90, 0xF0, 0x90, 0x90}
	spriteB := []byte{0xE0, 0x90, 0xE0, 0x90, 0xE0}
	spriteC := []byte{0xF0, 0x80, 0x80, 0x80, 0xF0}
	spriteD := []byte{0xE0, 0x90, 0x90, 0x90, 0xE0}
	spriteE := []byte{0xF0, 0x80, 0xF0, 0x80, 0xF0}
	spriteF := []byte{0xF0, 0x80, 0xF0, 0x80, 0x80}
	mem = ram{}
	copy(mem[0+5*0x00:], sprite0)
	copy(mem[0+5*0x01:], sprite1)
	copy(mem[0+5*0x02:], sprite2)
	copy(mem[0+5*0x03:], sprite3)
	copy(mem[0+5*0x04:], sprite4)
	copy(mem[0+5*0x05:], sprite5)
	copy(mem[0+5*0x06:], sprite6)
	copy(mem[0+5*0x07:], sprite7)
	copy(mem[0+5*0x08:], sprite8)
	copy(mem[0+5*0x09:], sprite9)
	copy(mem[0+5*0x0A:], spriteA)
	copy(mem[0+5*0x0B:], spriteB)
	copy(mem[0+5*0x0C:], spriteC)
	copy(mem[0+5*0x0D:], spriteD)
	copy(mem[0+5*0x0E:], spriteE)
	copy(mem[0+5*0x0F:], spriteF)
}

func byteToFontLoc(b byte) uint16 {
	return uint16(0 + 5*b)
}

func loadROM(path string) error {
	b, err := ioutil.ReadFile(path)
	if err != nil {
		return err
	}
	copy(mem[0x200:], b)
	return nil
}
